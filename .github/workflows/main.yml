name: Build, Test, & Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  audit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.7.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run security-audit

  build:
    runs-on: ubuntu-latest
    needs: audit

    strategy:
      matrix:
        node-version: [16.7.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci

  test:
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [16.7.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - env:
          HTTP_PORT: ${{ secrets.HTTP_PORT }}
          HTTPS_PORT: ${{ secrets.HTTPS_PORT }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          MAILGUN_SMTP_LOGIN: ${{ secrets.MAILGUN_SMTP_LOGIN }}
          MAILGUN_SMTP_PASSWORD: ${{ secrets.MAILGUN_SMTP_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          AUTH_URL: ${{ secrets.AUTH_URL }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_ISSUER: ${{ secrets.JWT_ISSUER }}
          JWT_AUDIENCE: ${{ secrets.JWT_AUDIENCE }}
        run: npm test
